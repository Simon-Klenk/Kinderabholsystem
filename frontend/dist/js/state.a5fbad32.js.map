{"version":3,"file":"js/state.a5fbad32.js","mappings":"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","sources":["webpack://kinderabholung/./src/views/StateView.vue","webpack://kinderabholung/./src/components/MessageItem.vue","webpack://kinderabholung/./src/components/MessageItem.vue?ae2b","webpack://kinderabholung/./src/views/StateView.vue?7993"],"sourcesContent":["<template>\n  <div class=\"messages-container\">\n    <!-- Title for the messages list -->\n    <h2 class=\"messages-title\">Gesendete Nachrichten</h2>\n\n    <!-- Display loading indicator while messages are being fetched -->\n    <div v-if=\"loading\" class=\"loading\">⏳ Lade Nachrichten...</div>\n\n    <!-- Display messages once they have been loaded -->\n    <div v-else>\n      <!-- Iterate over the messages and display each one using the MessageItem component -->\n      <MessageItem\n        v-for=\"message in messages\"\n        :key=\"message.id\"\n        :text=\"message.content\"\n        :date=\"message.created_at\"\n        :state=\"message.status\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport MessageItem from \"@/components/MessageItem.vue\";\n\nexport default {\n  components: { MessageItem },\n  data() {\n    return {\n      // Array to store the list of messages\n      messages: [],\n      // Flag to indicate loading state\n      loading: true,\n      // ID of the polling interval for message updates\n      intervalId: null,\n    };\n  },\n  async created() {\n    // Fetch messages when the component is created\n    await this.getMessages();\n    // Start polling to refresh messages periodically\n    this.startPolling();\n  },\n  beforeUnmount() {\n    // Stop polling when the component is destroyed to clean up resources\n    this.stopPolling();\n  },\n  methods: {\n    // Fetch messages from the API\n    async getMessages() {\n      try {\n        // Make a GET request to fetch the messages\n        let response = await fetch(\"http://192.168.104.45/api/messages/\", {\n          method: \"GET\",\n        });\n\n        // Check if the response is successful\n        if (!response.ok)\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n\n        // Parse and store the messages, then update the loading state\n        this.messages = await response.json();\n        this.loading = false;\n      } catch (error) {\n        // Log any errors that occur during the fetch process\n        console.error(\"Fehler beim Abrufen der Nachrichten:\", error);\n        this.loading = false;\n      }\n    },\n\n    // Start polling to fetch new messages periodically\n    startPolling() {\n      // Poll every 4 seconds to get updated messages\n      this.intervalId = setInterval(this.getMessages, 4000);\n    },\n\n    // Stop polling when the component is about to be unmounted\n    stopPolling() {\n      if (this.intervalId) clearInterval(this.intervalId);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Styling for the container of the messages list */\n.messages-container {\n  max-width: 600px;\n  margin: auto;\n  padding: 20px;\n  background: #f9f9f9;\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Styling for the title of the messages list */\n.messages-title {\n  text-align: center;\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n/* Styling for the loading indicator */\n.loading {\n  text-align: center;\n  font-size: 16px;\n  color: #777;\n}\n</style>\n","<template>\n  <div class=\"message-item\">\n    <!-- Message text displaying the formatted message with dynamic user input -->\n    <div class=\"message-text\">\n      Die Eltern von <strong>{{ text }}</strong> bitte zum Check-in kommen\n    </div>\n\n    <div class=\"message-meta\">\n      <!-- Formatted date of the message -->\n      <span class=\"message-date\">{{ formattedDate }}</span>\n\n      <div class=\"message-state\">\n        <!-- Display the message's current state with corresponding class styling -->\n        <span :class=\"statusClass\"> {{ translatedState }} </span>\n\n        <!-- Tooltip info icon that toggles visibility of the message's status explanation -->\n        <span class=\"info-icon\" @click=\"toggleTooltip\">❓</span>\n\n        <!-- Tooltip providing more details about the current message state -->\n        <div v-if=\"showTooltip\" class=\"tooltip\">\n          {{ statusExplanation }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MessageItem\",\n  props: {\n    // Prop for the message text\n    text: String,\n    // Prop for the message date\n    date: String,\n    // Prop for the message state (status)\n    state: String,\n  },\n  data() {\n    return {\n      // State to toggle the visibility of the tooltip\n      showTooltip: false,\n    };\n  },\n  computed: {\n    // Computed property to format the date using toLocaleString\n    formattedDate() {\n      return new Date(this.date).toLocaleString();\n    },\n\n    // Translates the state to a human-readable format\n    translatedState() {\n      const statusTranslations = {\n        received: \"Wartet auf Freigabe\",\n        approved: \"Wird angezeigt\",\n        rejected: \"Wurde abgelehnt\",\n        sent: \"An AV Gesendet\",\n        displayed: \"Wurde angezeigt\",\n      };\n      return statusTranslations[this.state] || this.state;\n    },\n\n    // Provides a detailed explanation of the message's status\n    statusExplanation() {\n      const explanations = {\n        received:\n          \"Das AV-Team hat deine Nachricht erhalten. Es entscheidet jetzt wann und ob es deine Nachricht auf der LED-Wall anzeigt. Du wirst hier informiert, sobald es eine Entscheidung trifft\",\n        approved:\n          \"Das AV-Team zeigt deine Nachricht gerade auf der LED-Wall an.\",\n        rejected:\n          \"Das AV-Team hat entschieden deine Nachricht nicht auf der LED-Wall anzuzeigen.\",\n        sent: \"Deine Nachricht wird gerade an das AV-Team gesendet, ist aber noch nicht dort angekommen.\",\n        displayed:\n          \"Deine Nachricht ist jetzt nicht mehr auf der LED-Wall zu sehen. Sie wurde aber angezeigt.\",\n      };\n      return explanations[this.state] || \"\";\n    },\n  },\n  methods: {\n    // Toggles the visibility of the tooltip when the info icon is clicked\n    toggleTooltip() {\n      this.showTooltip = !this.showTooltip;\n    },\n\n    // Returns the appropriate CSS class based on the current message state\n    statusClass() {\n      return {\n        \"status-pending\": this.state === \"received\",\n        \"status-success\": this.state === \"approved\",\n        \"status-error\": this.state === \"rejected\",\n        \"status-sent\": this.state === \"sent\",\n        \"status-displayed\": this.state === \"displayed\",\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Styling for the overall message item container */\n.message-item {\n  display: flex;\n  flex-direction: column;\n  background: white;\n  padding: 25px;\n  margin-bottom: 10px;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative;\n}\n\n/* Styling for the message text */\n.message-text {\n  font-size: 16px;\n  color: #333;\n}\n\n/* Styling for the metadata section (date and status) */\n.message-meta {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  font-size: 14px;\n  color: #666;\n}\n\n/* Container for the message state (status) and the tooltip icon */\n.message-state {\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n/* Margin between the status text and the tooltip icon */\n.message-state span {\n  margin-right: 8px;\n}\n\n/* Styling for the tooltip info icon */\n.info-icon {\n  cursor: pointer;\n  font-size: 18px;\n  color: black;\n  margin-left: 8px;\n}\n\n/* Tooltip styling for displaying detailed status information */\n.tooltip {\n  position: absolute;\n  top: -75px;\n  transform: translateX(-50%);\n  background-color: #f8f9fa;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 14px;\n  color: #333;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  width: 350px;\n  z-index: 10;\n}\n\n/* Styling for each message state (status) */\n.status-pending {\n  background: #f0ad4e;\n  color: white;\n}\n\n.status-success {\n  background: #5cb85c;\n  color: white;\n}\n\n.status-error {\n  background: #d9534f;\n  color: white;\n}\n\n.status-sent {\n  background: #5bc0de;\n  color: white;\n}\n\n.status-displayed {\n  background: #ffc107;\n  color: white;\n}\n</style>\n","import { render } from \"./MessageItem.vue?vue&type=template&id=386e3252&scoped=true\"\nimport script from \"./MessageItem.vue?vue&type=script&lang=js\"\nexport * from \"./MessageItem.vue?vue&type=script&lang=js\"\n\nimport \"./MessageItem.vue?vue&type=style&index=0&id=386e3252&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-386e3252\"]])\n\nexport default __exports__","import { render } from \"./StateView.vue?vue&type=template&id=4e32ca43&scoped=true\"\nimport script from \"./StateView.vue?vue&type=script&lang=js\"\nexport * from \"./StateView.vue?vue&type=script&lang=js\"\n\nimport \"./StateView.vue?vue&type=style&index=0&id=4e32ca43&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e32ca43\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","_hoisted_3","_Fragment","_renderList","messages","message","_createBlock","_component_MessageItem","id","text","content","date","created_at","state","status","_createTextVNode","_toDisplayString","$props","_hoisted_4","$options","formattedDate","_hoisted_5","_normalizeClass","statusClass","translatedState","onClick","_cache","args","toggleTooltip","showTooltip","_hoisted_6","statusExplanation","_createCommentVNode","name","props","String","data","computed","Date","this","toLocaleString","statusTranslations","received","approved","rejected","sent","displayed","explanations","methods","__exports__","components","MessageItem","intervalId","created","getMessages","startPolling","beforeUnmount","stopPolling","response","fetch","method","ok","Error","json","error","console","setInterval","clearInterval","render"],"sourceRoot":""}