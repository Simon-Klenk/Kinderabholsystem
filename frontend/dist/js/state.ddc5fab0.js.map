{"version":3,"file":"js/state.ddc5fab0.js","mappings":"yMACOA,MAAM,kB,GADbC,IAAA,EAMiCD,MAAM,kB,EANvC,a,GAAAC,IAAA,EAiC+BD,MAAM,W,GAjCrCC,IAAA,EAsC6BD,MAAM,S,0CArCjCE,EAAAA,EAAAA,IAwCM,MAxCNC,EAwCM,cAtCJC,EAAAA,EAAAA,IAAwD,MAApDJ,MAAM,iBAAgB,6BAAyB,IAGzCK,EAAAC,mBANdC,EAAAA,EAAAA,IAAA,SAM+B,WAA3BL,EAAAA,EAAAA,IAGI,IAHJM,EAAoD,kFANxD,aAYIJ,EAAAA,EAAAA,IAEM,OAFDJ,MAAM,gBAAe,sEAE1B,iBAEAI,EAAAA,EAAAA,IAKM,OALDJ,MAAM,eAAa,EACtBI,EAAAA,EAAAA,IAGS,cAHD,yFAGR,KAIFA,EAAAA,EAAAA,IAMS,UALNK,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAC,uBAAAD,EAAAC,yBAAAF,IACPG,UAAWT,EAAAC,mBAAqBD,EAAAU,aACjCf,MAAM,iBACP,4BAED,EA9BJgB,GAiCeX,EAAAY,iBAAc,WAAzBf,EAAAA,EAAAA,IAEM,MAFNgB,EAEMR,EAAA,KAAAA,EAAA,KADJN,EAAAA,EAAAA,IAAsC,SAAnC,mCAA+B,QAlCxCG,EAAAA,EAAAA,IAAA,OAsCeF,EAAAc,eAAY,WAAvBjB,EAAAA,EAAAA,IAEM,MAFNkB,EAEM,EADJhB,EAAAA,EAAAA,IAAyB,UAAAiB,EAAAA,EAAAA,IAAnBhB,EAAAc,cAAY,OAvCxBZ,EAAAA,EAAAA,IAAA,Q,aA6CA,GACEe,IAAAA,GACE,MAAO,CACLL,eAAgB,KAChBE,aAAc,KACdJ,cAAc,EACdT,mBAAmB,EAEvB,EACAiB,QAAS,CAKP,0BAAMC,GACJ,IACE,MAAMC,QAAiBC,MAAM,mCAC7BC,KAAKrB,kBAAoBmB,EAASG,EACpC,CAAE,MAAOC,GACPF,KAAKrB,mBAAoB,CAC3B,CACF,EAMA,iBAAMwB,GACJH,KAAKZ,cAAe,EACpB,IACE,MAAMU,QAAiBC,MAAM,uCAAwC,CACnEK,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,QACE,oFACFC,OAAQ,WAGZ,IAAKZ,EAASG,GAAI,MAAM,IAAIU,MAAM,gBAAgBb,EAASY,UAC3DV,KAAKV,eAAiB,kCACtBU,KAAKR,aAAe,KACpBoB,YAAW,IAAMZ,KAAKa,QAAQC,KAAK,WAAW,KAChD,CAAE,MAAOZ,GACPF,KAAKR,aAAe,uBAAuBU,EAAMa,SACnD,CAAE,QACAf,KAAKZ,cAAe,CACtB,CACF,EAMAF,qBAAAA,GACM8B,QAAQ,qCACVhB,KAAKG,aAET,GAMFc,OAAAA,GACEjB,KAAKH,sBACP,G,UCxGF,MAAMqB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,2FCRO9C,MAAM,sB,GADbC,IAAA,EAMwBD,MAAM,W,GAN9BC,IAAA,G,0EACEC,EAAAA,EAAAA,IAkBM,MAlBNC,EAkBM,cAhBJC,EAAAA,EAAAA,IAAqD,MAAjDJ,MAAM,kBAAiB,yBAAqB,IAGrCK,EAAA0C,UAAO,WAAlB7C,EAAAA,EAAAA,IAA+D,MAA/DM,EAAoC,4BAAqB,WAGzDN,EAAAA,EAAAA,IASM,MAlBVc,EAAA,gBAWMd,EAAAA,EAAAA,IAME8C,EAAAA,GAAA,MAjBRC,EAAAA,EAAAA,IAY0B5C,EAAA6C,UAAXR,K,WADTS,EAAAA,EAAAA,IAMEC,EAAA,CAJCnD,IAAKyC,EAAQW,GACbC,KAAMZ,EAAQN,QACdmB,KAAMb,EAAQc,WACdC,MAAOf,EAAQL,Q,qECfjBrC,MAAM,gB,GADbC,IAAA,G,GAAAA,IAAA,EAOSD,MAAM,gB,GAINA,MAAM,gB,GAEHA,MAAM,gB,GAEPA,MAAM,iB,GAfjBC,IAAA,EAuBgCD,MAAM,W,0CAtBpCE,EAAAA,EAAAA,IA2BM,MA3BNC,EA2BM,CAzBOuD,EAAAJ,KAAKK,SAAS,4BAAD,WAAxBzD,EAAAA,EAAAA,IAEM,MALVM,EAAA,EAIMJ,EAAAA,EAAAA,IAA2B,eAAAiB,EAAAA,EAAAA,IAAhBqC,EAAAJ,MAAI,mBAGjBpD,EAAAA,EAAAA,IAEM,MAFNc,EAEM,cATV4C,EAAAA,EAAAA,IAOqC,sBAChBxD,EAAAA,EAAAA,IAA2B,eAAAiB,EAAAA,EAAAA,IAAhBqC,EAAAJ,MAAI,gBARpCM,EAAAA,EAAAA,IAQgD,oCAG5CxD,EAAAA,EAAAA,IAgBM,MAhBNc,EAgBM,EAdJd,EAAAA,EAAAA,IAAqD,OAArDgB,GAAqDC,EAAAA,EAAAA,IAAvBT,EAAAiD,eAAa,IAE3CzD,EAAAA,EAAAA,IAWM,MAXN0D,EAWM,EATJ1D,EAAAA,EAAAA,IAAyD,QAAlDJ,OAjBf+D,EAAAA,EAAAA,IAiBsBnD,EAAAoD,e,QAAiBpD,EAAAqD,iBAAe,IAG9C7D,EAAAA,EAAAA,IAAuD,QAAjDJ,MAAM,YAAaS,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAsD,eAAAtD,EAAAsD,iBAAAvD,KAAe,KAGpCN,EAAA8D,cAAW,WAAtBjE,EAAAA,EAAAA,IAEM,MAFNkE,GAEM/C,EAAAA,EAAAA,IADDT,EAAAyD,mBAAiB,KAxB9B9D,EAAAA,EAAAA,IAAA,Y,CAgCA,OACE+D,KAAM,cACNC,MAAO,CAELjB,KAAMkB,OAENjB,KAAMiB,OAENf,MAAOe,QAETlD,IAAAA,GACE,MAAO,CAEL6C,aAAa,EAEjB,EACAM,SAAU,CAERZ,aAAAA,GACE,OAAO,IAAIa,KAAK/C,KAAK4B,MAAMoB,gBAC7B,EAGAV,eAAAA,GACE,MAAMW,EAAqB,CACzBC,SAAU,sBACVC,SAAU,iBACVC,SAAU,kBACVC,KAAM,iBACNC,UAAW,mBAEb,OAAOL,EAAmBjD,KAAK8B,QAAU9B,KAAK8B,KAChD,EAGAY,iBAAAA,GACE,MAAMa,EAAe,CACnBL,SACE,uLACFC,SACE,gEACFC,SACE,iFACFC,KAAM,4FACNC,UACE,6FAEJ,OAAOC,EAAavD,KAAK8B,QAAU,EACrC,GAEFlC,QAAS,CAEP2C,aAAAA,GACEvC,KAAKwC,aAAexC,KAAKwC,WAC3B,EAGAH,WAAAA,GACE,MAAO,CACL,iBAAiC,aAAfrC,KAAK8B,MACvB,iBAAiC,aAAf9B,KAAK8B,MACvB,eAA+B,aAAf9B,KAAK8B,MACrB,cAA8B,SAAf9B,KAAK8B,MACpB,mBAAmC,cAAf9B,KAAK8B,MAE7B,I,UC1FJ,MAAMZ,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QFgBA,GACEsC,WAAY,CAAEC,YAAWA,GACzB9D,IAAAA,GACE,MAAO,CAEL4B,SAAU,GAEVH,SAAS,EAETsC,WAAY,KAEhB,EACA,aAAMC,SAEE3D,KAAK4D,cAEX5D,KAAK6D,cACP,EACAC,aAAAA,GAEE9D,KAAK+D,aACP,EACAnE,QAAS,CAEP,iBAAMgE,GACJ,IAEE,IAAI9D,QAAiBC,MAAM,sCAAuC,CAChEK,OAAQ,QAIV,IAAKN,EAASG,GACZ,MAAM,IAAIU,MAAM,wBAAwBb,EAASY,UAGnDV,KAAKuB,eAAiBzB,EAASkE,OAC/BhE,KAAKoB,SAAU,CACjB,CAAE,MAAOlB,GAEP+D,QAAQ/D,MAAM,uCAAwCA,GACtDF,KAAKoB,SAAU,CACjB,CACF,EAGAyC,YAAAA,GAEE7D,KAAK0D,WAAaQ,YAAYlE,KAAK4D,YAAa,IAClD,EAGAG,WAAAA,GACM/D,KAAK0D,YAAYS,cAAcnE,KAAK0D,WAC1C,IGxEJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASvC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://kinderabholung/./src/views/EmergencyView.vue","webpack://kinderabholung/./src/views/EmergencyView.vue?25e9","webpack://kinderabholung/./src/views/StateView.vue","webpack://kinderabholung/./src/components/MessageItem.vue","webpack://kinderabholung/./src/components/MessageItem.vue?ae2b","webpack://kinderabholung/./src/views/StateView.vue?7993"],"sourcesContent":["<template>\n  <div class=\"message-create\">\n    <!-- Emergency Request Title -->\n    <h2 class=\"message-title\">Notfall - Hilfe anfordern</h2>\n\n    <!-- Display a warning message if the Raspberry Pi is offline -->\n    <p v-if=\"!isRaspberryOnline\" class=\"status-offline\">\n      ❌ System funktioniert aktuell nicht - AV kann nicht benachrichtigt\n      werden!!\n    </p>\n\n    <!-- Inform the user about the message that will be sent -->\n    <div class=\"message-text\">\n      Du sendest zur Anzeige auf der LED-Wall folgene Nachricht an AV:\n    </div>\n\n    <div class=\"spaced-text\">\n      <strong>\n        Medizinischer Notfall: Sanitäter / Arzt / Fachpersonal - bitte zum Kids\n        Check-In!\n      </strong>\n    </div>\n\n    <!-- Emergency button, disabled if the Raspberry Pi is offline or request is in progress -->\n    <button\n      @click=\"confirmAndSendMessage\"\n      :disabled=\"!isRaspberryOnline || isSubmitting\"\n      class=\"spaced-button\"\n    >\n      Notfallnachricht senden\n    </button>\n\n    <!-- Display success message when the message is sent successfully -->\n    <div v-if=\"successMessage\" class=\"success\">\n      <p>Nachricht erfolgreich gesendet!</p>\n    </div>\n\n    <!-- Display error message if sending fails -->\n    <div v-if=\"errorMessage\" class=\"error\">\n      <p>{{ errorMessage }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      successMessage: null, // Stores success feedback when message is sent\n      errorMessage: null, // Stores error messages in case of failure\n      isSubmitting: false, // Flag to track if the message is being sent\n      isRaspberryOnline: false, // Indicates if the Raspberry Pi is reachable\n    };\n  },\n  methods: {\n    /**\n     * Checks the availability of the Raspberry Pi by making a request to the API.\n     * Updates the \"isRaspberryOnline\" state accordingly.\n     */\n    async checkRaspberryStatus() {\n      try {\n        const response = await fetch(\"http://192.168.104.45/api/live/\");\n        this.isRaspberryOnline = response.ok;\n      } catch (error) {\n        this.isRaspberryOnline = false;\n      }\n    },\n\n    /**\n     * Sends an emergency message to the API endpoint if the Raspberry Pi is online.\n     * Displays success or error messages accordingly.\n     */\n    async sendMessage() {\n      this.isSubmitting = true; // Disable button while submitting\n      try {\n        const response = await fetch(\"http://192.168.104.45/api/emergency/\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            content:\n              \"Medizinischer Notfall: Sanitäter / Arzt / Fachpersonal - bitte zum Kids Check-In!\",\n            status: \"sent\",\n          }),\n        });\n        if (!response.ok) throw new Error(`HTTP-Fehler: ${response.status}`);\n        this.successMessage = \"Nachricht erfolgreich gesendet!\";\n        this.errorMessage = null;\n        setTimeout(() => this.$router.push(\"/state\"), 1500);\n      } catch (error) {\n        this.errorMessage = `Fehler beim Senden: ${error.message}`;\n      } finally {\n        this.isSubmitting = false; // Re-enable button after submission\n      }\n    },\n\n    /**\n     * Displays a confirmation dialog before sending the emergency message.\n     * Calls sendMessage() only if the user confirms.\n     */\n    confirmAndSendMessage() {\n      if (confirm(\"Sicher, dass du senden möchtest?\")) {\n        this.sendMessage();\n      }\n    },\n  },\n\n  /**\n   * Lifecycle hook: Checks the Raspberry Pi status when the component is mounted.\n   */\n  mounted() {\n    this.checkRaspberryStatus();\n  },\n};\n</script>\n\n<style scoped>\n/* Container styling */\n.message-create {\n  max-width: 600px;\n  margin: auto;\n  padding: 20px;\n  background: #f9f9f9;\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  text-align: center;\n}\n\n/* Title styling */\n.message-title {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n/* Button styling */\nbutton {\n  padding: 12px;\n  background-color: gray;\n  color: white;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: 20px;\n}\n\n/* Button hover effect */\nbutton:hover {\n  background-color: green;\n}\n\n/* Disabled button styling */\nbutton:disabled {\n  background-color: lightgray;\n  cursor: not-allowed;\n}\n\n/* Success message styling */\n.success {\n  color: green;\n  font-size: 16px;\n  margin-top: 10px;\n}\n\n/* Error message styling */\n.error {\n  color: red;\n  font-size: 16px;\n  margin-top: 10px;\n}\n\n/* Raspberry Pi online/offline status */\n.status-online {\n  color: green;\n  font-size: 16px;\n}\n\n.status-offline {\n  color: red;\n  font-size: 16px;\n}\n\n/* Extra spacing for the button */\n.spaced-button {\n  margin-top: 30px;\n}\n\n.spaced-text {\n  margin-top: 15px;\n}\n</style>\n","import { render } from \"./EmergencyView.vue?vue&type=template&id=3823626b&scoped=true\"\nimport script from \"./EmergencyView.vue?vue&type=script&lang=js\"\nexport * from \"./EmergencyView.vue?vue&type=script&lang=js\"\n\nimport \"./EmergencyView.vue?vue&type=style&index=0&id=3823626b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3823626b\"]])\n\nexport default __exports__","<template>\n  <div class=\"messages-container\">\n    <!-- Title for the messages list -->\n    <h2 class=\"messages-title\">Gesendete Nachrichten</h2>\n\n    <!-- Display loading indicator while messages are being fetched -->\n    <div v-if=\"loading\" class=\"loading\">⏳ Lade Nachrichten...</div>\n\n    <!-- Display messages once they have been loaded -->\n    <div v-else>\n      <!-- Iterate over the messages and display each one using the MessageItem component -->\n      <MessageItem\n        v-for=\"message in messages\"\n        :key=\"message.id\"\n        :text=\"message.content\"\n        :date=\"message.created_at\"\n        :state=\"message.status\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport MessageItem from \"@/components/MessageItem.vue\";\n\nexport default {\n  components: { MessageItem },\n  data() {\n    return {\n      // Array to store the list of messages\n      messages: [],\n      // Flag to indicate loading state\n      loading: true,\n      // ID of the polling interval for message updates\n      intervalId: null,\n    };\n  },\n  async created() {\n    // Fetch messages when the component is created\n    await this.getMessages();\n    // Start polling to refresh messages periodically\n    this.startPolling();\n  },\n  beforeUnmount() {\n    // Stop polling when the component is destroyed to clean up resources\n    this.stopPolling();\n  },\n  methods: {\n    // Fetch messages from the API\n    async getMessages() {\n      try {\n        // Make a GET request to fetch the messages\n        let response = await fetch(\"http://192.168.104.45/api/messages/\", {\n          method: \"GET\",\n        });\n\n        // Check if the response is successful\n        if (!response.ok)\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n\n        // Parse and store the messages, then update the loading state\n        this.messages = await response.json();\n        this.loading = false;\n      } catch (error) {\n        // Log any errors that occur during the fetch process\n        console.error(\"Fehler beim Abrufen der Nachrichten:\", error);\n        this.loading = false;\n      }\n    },\n\n    // Start polling to fetch new messages periodically\n    startPolling() {\n      // Poll every 4 seconds to get updated messages\n      this.intervalId = setInterval(this.getMessages, 4000);\n    },\n\n    // Stop polling when the component is about to be unmounted\n    stopPolling() {\n      if (this.intervalId) clearInterval(this.intervalId);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Styling for the container of the messages list */\n.messages-container {\n  max-width: 600px;\n  margin: auto;\n  padding: 20px;\n  background: #f9f9f9;\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Styling for the title of the messages list */\n.messages-title {\n  text-align: center;\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n/* Styling for the loading indicator */\n.loading {\n  text-align: center;\n  font-size: 16px;\n  color: #777;\n}\n</style>\n","<template>\n  <div class=\"message-item\">\n    <!-- Message text displaying the formatted message with dynamic user input -->\n    <div v-if=\"text.includes('Medizinischer Notfall:')\">\n      <strong>{{ text }}</strong>\n    </div>\n\n    <div class=\"message-text\" v-else>\n      Die Eltern von <strong>{{ text }}</strong> bitte zum Check-in kommen\n    </div>\n\n    <div class=\"message-meta\">\n      <!-- Formatted date of the message -->\n      <span class=\"message-date\">{{ formattedDate }}</span>\n\n      <div class=\"message-state\">\n        <!-- Display the message's current state with corresponding class styling -->\n        <span :class=\"statusClass\"> {{ translatedState }} </span>\n\n        <!-- Tooltip info icon that toggles visibility of the message's status explanation -->\n        <span class=\"info-icon\" @click=\"toggleTooltip\">❓</span>\n\n        <!-- Tooltip providing more details about the current message state -->\n        <div v-if=\"showTooltip\" class=\"tooltip\">\n          {{ statusExplanation }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MessageItem\",\n  props: {\n    // Prop for the message text\n    text: String,\n    // Prop for the message date\n    date: String,\n    // Prop for the message state (status)\n    state: String,\n  },\n  data() {\n    return {\n      // State to toggle the visibility of the tooltip\n      showTooltip: false,\n    };\n  },\n  computed: {\n    // Computed property to format the date using toLocaleString\n    formattedDate() {\n      return new Date(this.date).toLocaleString();\n    },\n\n    // Translates the state to a human-readable format\n    translatedState() {\n      const statusTranslations = {\n        received: \"Wartet auf Freigabe\",\n        approved: \"Wird angezeigt\",\n        rejected: \"Wurde abgelehnt\",\n        sent: \"An AV Gesendet\",\n        displayed: \"Wurde angezeigt\",\n      };\n      return statusTranslations[this.state] || this.state;\n    },\n\n    // Provides a detailed explanation of the message's status\n    statusExplanation() {\n      const explanations = {\n        received:\n          \"Das AV-Team hat deine Nachricht erhalten. Es entscheidet jetzt wann und ob es deine Nachricht auf der LED-Wall anzeigt. Du wirst hier informiert, sobald es eine Entscheidung trifft\",\n        approved:\n          \"Das AV-Team zeigt deine Nachricht gerade auf der LED-Wall an.\",\n        rejected:\n          \"Das AV-Team hat entschieden deine Nachricht nicht auf der LED-Wall anzuzeigen.\",\n        sent: \"Deine Nachricht wird gerade an das AV-Team gesendet, ist aber noch nicht dort angekommen.\",\n        displayed:\n          \"Deine Nachricht ist jetzt nicht mehr auf der LED-Wall zu sehen. Sie wurde aber angezeigt.\",\n      };\n      return explanations[this.state] || \"\";\n    },\n  },\n  methods: {\n    // Toggles the visibility of the tooltip when the info icon is clicked\n    toggleTooltip() {\n      this.showTooltip = !this.showTooltip;\n    },\n\n    // Returns the appropriate CSS class based on the current message state\n    statusClass() {\n      return {\n        \"status-pending\": this.state === \"received\",\n        \"status-success\": this.state === \"approved\",\n        \"status-error\": this.state === \"rejected\",\n        \"status-sent\": this.state === \"sent\",\n        \"status-displayed\": this.state === \"displayed\",\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Styling for the overall message item container */\n.message-item {\n  display: flex;\n  flex-direction: column;\n  background: white;\n  padding: 25px;\n  margin-bottom: 10px;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative;\n}\n\n/* Styling for the message text */\n.message-text {\n  font-size: 16px;\n  color: #333;\n}\n\n/* Styling for the metadata section (date and status) */\n.message-meta {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  font-size: 14px;\n  color: #666;\n}\n\n/* Container for the message state (status) and the tooltip icon */\n.message-state {\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n/* Margin between the status text and the tooltip icon */\n.message-state span {\n  margin-right: 8px;\n}\n\n/* Styling for the tooltip info icon */\n.info-icon {\n  cursor: pointer;\n  font-size: 18px;\n  color: black;\n  margin-left: 8px;\n}\n\n/* Tooltip styling for displaying detailed status information */\n.tooltip {\n  position: absolute;\n  top: -75px;\n  transform: translateX(-50%);\n  background-color: #f8f9fa;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 14px;\n  color: #333;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  width: 350px;\n  z-index: 10;\n}\n\n/* Styling for each message state (status) */\n.status-pending {\n  background: #f0ad4e;\n  color: white;\n}\n\n.status-success {\n  background: #5cb85c;\n  color: white;\n}\n\n.status-error {\n  background: #d9534f;\n  color: white;\n}\n\n.status-sent {\n  background: #5bc0de;\n  color: white;\n}\n\n.status-displayed {\n  background: #ffc107;\n  color: white;\n}\n</style>\n","import { render } from \"./MessageItem.vue?vue&type=template&id=35b7df33&scoped=true\"\nimport script from \"./MessageItem.vue?vue&type=script&lang=js\"\nexport * from \"./MessageItem.vue?vue&type=script&lang=js\"\n\nimport \"./MessageItem.vue?vue&type=style&index=0&id=35b7df33&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-35b7df33\"]])\n\nexport default __exports__","import { render } from \"./StateView.vue?vue&type=template&id=4e32ca43&scoped=true\"\nimport script from \"./StateView.vue?vue&type=script&lang=js\"\nexport * from \"./StateView.vue?vue&type=script&lang=js\"\n\nimport \"./StateView.vue?vue&type=style&index=0&id=4e32ca43&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e32ca43\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","isRaspberryOnline","_createCommentVNode","_hoisted_2","onClick","_cache","args","$options","confirmAndSendMessage","disabled","isSubmitting","_hoisted_3","successMessage","_hoisted_4","errorMessage","_hoisted_5","_toDisplayString","data","methods","checkRaspberryStatus","response","fetch","this","ok","error","sendMessage","method","headers","body","JSON","stringify","content","status","Error","setTimeout","$router","push","message","confirm","mounted","__exports__","render","loading","_Fragment","_renderList","messages","_createBlock","_component_MessageItem","id","text","date","created_at","state","$props","includes","_createTextVNode","formattedDate","_hoisted_6","_normalizeClass","statusClass","translatedState","toggleTooltip","showTooltip","_hoisted_7","statusExplanation","name","props","String","computed","Date","toLocaleString","statusTranslations","received","approved","rejected","sent","displayed","explanations","components","MessageItem","intervalId","created","getMessages","startPolling","beforeUnmount","stopPolling","json","console","setInterval","clearInterval"],"sourceRoot":""}