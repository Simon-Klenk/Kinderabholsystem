##
# You should look at the following URLs to gain a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/
# and leave it as a reference inside sites-available, where it will continue to be
# updated by the Nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or WordPress. These applications will be made
# available under a path with their package name, e.g., /drupal8.
#
# Please refer to /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    listen 80 default_server;  # Listen for HTTP traffic on port 80
    listen [::]:80 default_server;  # Listen for IPv6 traffic on port 80

    # SSL configuration (optional, can be enabled if using HTTPS)
    #
    # listen 443 ssl default_server;  # Listen for HTTPS traffic on port 443
    # listen [::]:443 ssl default_server;  # Listen for IPv6 traffic on port 443
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Make sure to read about ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self-signed certificates generated by the ssl-cert package
    # Do not use them in a production environment!
    #
    # include snippets/snakeoil.conf;  # Include self-signed SSL configuration (not recommended for production)

    root /var/www/html;  # Root directory for serving files

    # Add index.php to the list if you're using PHP
    index index.html index.htm index.nginx-debian.html;  # Default index files to serve

    server_name _;  # This server is the default catch-all for requests not matching any other server_name

    # Static files for the Vue.js (Frontend)
    location / {
        root /var/www/static/;  # Path to the static files of Vue.js application
        index index.html;  # Default starting page for the frontend
        try_files $uri /index.html;  # Fallback to index.html for single-page applications (SPA)
    }

    # API requests (Django Backend)
    location /api/ {
        proxy_pass http://127.0.0.1:8000;  # Django backend running on Gunicorn at port 8000
        proxy_set_header Host $host;  # Forward the original host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward the real client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original client IP if passed through proxies
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (HTTP/HTTPS)
        proxy_set_header X-Forwarded-Host $host;  # Forward the original host
        proxy_cookie_domain 127.0.0.1 192.168.104.45;  # Handle cookie domain rewrite
    }

    # Django admin requests
    location /admin/ {
        proxy_pass http://127.0.0.1:8000;  # Django backend running on Gunicorn at port 8000
        proxy_set_header Host $host;  # Forward the original host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward the real client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original client IP
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (HTTP/HTTPS)
        proxy_redirect off;  # Disable redirect for admin panel
    }

    # PHP configuration (commented out)
    #
    # If you're using PHP with FastCGI, you can enable the following block.
    # Uncomment to pass PHP scripts to the FastCGI server.
    #
    # location ~ \.php$ {
    #     include snippets/fastcgi-php.conf;  # PHP configuration snippet
    #
    #     # With php-fpm (or other Unix sockets):
    #     fastcgi_pass unix:/run/php/php7.4-fpm.sock;  # PHP-FPM socket path
    #     # Or with php-cgi (or other TCP sockets):
    #     fastcgi_pass 127.0.0.1:9000;  # PHP-CGI server IP and port
    # }

    # Deny access to .htaccess files if Apache's document root
    # concurs with Nginx's one
    #
    # location ~ /\.ht {
    #     deny all;  # Prevent access to hidden files (e.g., .htaccess)
    # }
}

# Virtual host configuration for example.com
#
# You can move this to a separate file in sites-available/
# and create a symlink in sites-enabled/ to enable it.
#
# server {
#     listen 80;  # Listen on port 80
#     listen [::]:80;  # Listen on IPv6 port 80
#
#     server_name example.com;  # Server name for example.com
#
#     root /var/www/example.com;  # Root directory for example.com
#     index index.html;  # Default index file
#
#     location / {
#         try_files $uri $uri/ =404;  # Try to serve the requested file, or return 404
#     }
# }
